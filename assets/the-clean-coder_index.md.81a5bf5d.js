import{_ as e,o as a,c as r,a as i,b as n,d as t,e as d,r as l}from"./app.236119f4.js";const s=JSON.parse('{"title":"代码整洁之道-程序员的职业素养","description":"","frontmatter":{},"headers":[{"level":2,"title":"要“职业素养”而不要“经历丰富”","slug":"要-职业素养-而不要-经历丰富","link":"#要-职业素养-而不要-经历丰富","children":[]},{"level":2,"title":"如何被视为“专业人士”","slug":"如何被视为-专业人士","link":"#如何被视为-专业人士","children":[]}],"relativePath":"the-clean-coder/index.md"}'),p={name:"the-clean-coder/index.md"},h=n("h1",{id:"代码整洁之道-程序员的职业素养",tabindex:"-1"},[t("代码整洁之道-程序员的职业素养 "),n("a",{class:"header-anchor",href:"#代码整洁之道-程序员的职业素养","aria-hidden":"true"},"#")],-1),c=d('<h2 id="要-职业素养-而不要-经历丰富" tabindex="-1">要“职业素养”而不要“经历丰富” <a class="header-anchor" href="#要-职业素养-而不要-经历丰富" aria-hidden="true">#</a></h2><p>在招聘中经常会问：“过去你在工作中，遭遇哪些印象深刻的困难，最后是怎么解决的？”以我的经验来看，简历写得再漂亮，这个问题回答不好，大都可以忽略。</p><p>为什么会有这个结论？因为我们需要的不是“经历丰富”的人，而是“有职业素养”的人。<strong>你遇到的问题坑很容易也可能很难，但我看重的不是问题的难度，而是解决问题的方式、步骤以及反思的程度</strong>。</p><p>恢复误删数据很容易，对很多人来说这是非常简单的任务。我更更感兴趣的是怎么分析问题，找了怎样的资料，采取了怎样的步骤，此后做了哪些措施来避免这种错误再次出现。在我看来，与问题本身的难度相比，解决问题的方式、步骤以及反思的程度，才能体现出一个人的职业素养。</p><p>职业素养并不是神秘的天赋，也不是技艺的高深，而是持续积淀的结晶：</p><ul><li>一方面，它体现了能力和素质</li><li>另一方面，它又强调了持续的积累和养成。</li></ul><p>作为一个职业的开发人员，基本技能不够熟练，当然谈不上职业素养，但是仅仅能迅速地编写代码，却不关心代码背后的意义，不能迅速的判断、解决程序运行中的各种问题，不能自信满满地为自己交付的程序承担责任，同样是和职业素养绝缘的。</p><h2 id="如何被视为-专业人士" tabindex="-1">如何被视为“专业人士” <a class="header-anchor" href="#如何被视为-专业人士" aria-hidden="true">#</a></h2><p>我们应该有组织的而不是混乱的完成工作。</p><p>技术人员不再找接口拖延，而是勇担责任；不再推卸估算工作或置身事外让其他人来做计划（然后对计划抱怨不休），而是真正做到自组织，并作出郑重承诺。</p><p>项目经理不再需要大动干戈才能推进解决 1，2，3，4 号问题；他从技术人员那里拿到的估算结果看起来是非常一致的，他不会感觉项目在技术人员那里的优先级是无足轻重的。以往所用的试图操控进度的所有招数手段，现在都派不上用场了；技术人员现在不会说“我们尽力而为吧”，而是代之以“这是我们的承诺；如果你想调整目标，请随时联系我们”。</p><p>技术团队应该努力让自己也被看作专业人士。</p>',12);const o=e(p,[["render",function(e,n,t,d,s,p){const o=l("VueJobs");return a(),r("div",null,[h,i(o),c])}]]);export{s as __pageData,o as default};
