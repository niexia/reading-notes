(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{516:function(t,s,a){"use strict";a.r(s);var e=a(2),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"yagni"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yagni"}},[t._v("#")]),t._v(" YAGNI")]),t._v(" "),a("p",[t._v("YAGNI 你可能没怎么听过，不过它理解起来也不难。")]),t._v(" "),a("h3",{attrs:{id:"如何理解-yagni"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何理解-yagni"}},[t._v("#")]),t._v(' 如何理解“YAGNI"')]),t._v(" "),a("p",[t._v("YAGNI 原则的英文全称是：You Ain’t Gonna Need It。直译就是：你不会需要它。")]),t._v(" "),a("p",[t._v("这条原则也算是万金油了。当用在软件开发中的时候，它的意思是："),a("strong",[t._v("不要去设计当前用不到的功能；不要去编写当前用不到的代码")]),t._v("。实际上，这条原则的核心思想就是："),a("strong",[t._v("不要做过度设计")]),t._v("。")]),t._v(" "),a("p",[t._v("比如，我们的系统暂时只用 Redis 存储配置信息，以后可能会用到 ZooKeeper。根据 YAGNI 原则，在未用到 ZooKeeper 之前，我们没必要提前编写这部分代码。")]),t._v(" "),a("p",[t._v("当然，这并不是说我们就不需要考虑代码的扩展性。我们"),a("strong",[t._v("还是要预留好扩展点")]),t._v("，等到需要的时候，再去实现 ZooKeeper 存储配置信息这部分代码。")]),t._v(" "),a("h3",{attrs:{id:"kiss-和-yagni-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kiss-和-yagni-区别"}},[t._v("#")]),t._v(" KISS 和 YAGNI 区别")]),t._v(" "),a("p",[t._v("从刚刚的分析我们可以看出，YAGNI 原则跟 KISS 原则并非一回事儿。")]),t._v(" "),a("ul",[a("li",[t._v("KISS 原则讲的是“"),a("strong",[t._v("如何做")]),t._v("”的问题（尽量保持简单），")]),t._v(" "),a("li",[t._v("而 YAGNI 原则说的是“"),a("strong",[t._v("要不要做")]),t._v("”的问题（当前不需要的就不要做）。")])])])}),[],!1,null,null,null);s.default=v.exports}}]);